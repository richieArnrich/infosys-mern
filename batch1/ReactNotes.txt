What is React JS
React is a JavaScript library for building user interfaces. 
It allows developers to create reusable UI components and manage state and props (data)

Installing:
npx create-react-app@latest project1
cd project1
npm start
---------------------------------------------------------
Component in ReactJS
A React component is a small, reusable piece of code that represents a UI element. It can be
a function, a class. Components can be nested inside each other to create
complex UI structures.

Functional Component:
A functional component is a simple function that returns JSX elements. It does not have 
its own state or lifecycle methods
To handle data it makes of props

Any component once created has to be called in App.JS
The component which calls the other component is called as Parent Component
The component which is called by the Parent Component is called as Child Component

Component Nesting:
Components can be nested inside each other to create complex UI structures.
Data can be passed from the top-most component to the lower-most component using props
This process is called as Props Drilling
Which leads to unwanted complication in the code
To overcome this complication we use a function called useContext()
---------------------------------------------------------
Homework: Learn class Component in react and state?

------------------------------------------------------------------------
useContext:
useContext is a hook that allows you to share data between components without passing props down manually.
It's a way to manage global state in your application.

npx create-react-app project2
cd project2
npm start

npm i web-vitals

How to use useContext()
1. Import the useContext hook from the react library
2. Create a context(data that is supposed to be passed) using the createContext function from the react library
3. Wrap the context with the Provider component from the react library
4. Use the useContext hook in the component where you want to access the context
